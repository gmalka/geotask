// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	models "gitlab.com/ptflp/geotask/module/courier/models"
)

// CourierStorager is an autogenerated mock type for the CourierStorager type
type CourierStorager struct {
	mock.Mock
}

// GetOne provides a mock function with given fields: ctx
func (_m *CourierStorager) GetOne(ctx context.Context) (*models.Courier, error) {
	ret := _m.Called(ctx)

	var r0 *models.Courier
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (*models.Courier, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) *models.Courier); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Courier)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, courier
func (_m *CourierStorager) Save(ctx context.Context, courier models.Courier) error {
	ret := _m.Called(ctx, courier)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.Courier) error); ok {
		r0 = rf(ctx, courier)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCourierStorager interface {
	mock.TestingT
	Cleanup(func())
}

// NewCourierStorager creates a new instance of CourierStorager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCourierStorager(t mockConstructorTestingTNewCourierStorager) *CourierStorager {
	mock := &CourierStorager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
